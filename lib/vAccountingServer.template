init(NAME,SUBNET,PREFIX,COUNTER,OSTYPE,LDATA,ADMINCRED,CLIENTS,PWREUSE,REUSECHANCE,POOL,DBCREDS,LOCAL,OSVULNS,HOSTVULNS,OSPARAMS,SQLVULNS,APPVULNS,NRWKT,PRWKT);

$curIp$=$PREFIX$;
$curIp$+=$COUNTER$;
$dnsname$=$NAME$;
$dnsname$+=".";
$dnsname$+=$SUBNET$;
ipaddress tmpIp=new ipaddress($dnsname$,$curIp$);

string name=$NAME$;
interface myInterfaces=new interface($SELF$.tmpIp);
string type=$SUBNET$.type;
$osname$=$NAME$;
$osname$+="Os";
$appname$=$NAME$;
$appname$+="App";
subnet belongsToSubnet=$SUBNET$;
string cpu="virtual";
string canBeMigrated="true";
if($HOSTVULNS$ != none){
  string[] hasVuln=$HOSTVULNS$;
};
if($POOL$ != none){
  string migrationPool=$POOL$;
};

if($OSTYPE$ == windows){
  os os=new osWindows($osname$,$SELF$.myInterfaces,none,"admin",$OSVULNS$,$OSPARAMS$,$NRWKT$,$PRWKT$);
};
if($OSTYPE$ == ubuntu){
  os os=new osUbuntu($osname$,$SELF$.myInterfaces,none,"admin",$OSVULNS$,$OSPARAMS$,$NRWKT$,$PRWKT$);
};

string os.parameters="remoteShell";

application os.applications=new appAccountingServer($appname$,$SELF$.myInterfaces,$APPVULNS$);
if($ADMINCRED$ != none){
  credential[] os.applications.acceptedCredentials=$ADMINCRED$;
  username os.applications.admin=$ADMINCRED$.username;
  credential[] os.applications.tmpAdminCred=$ADMINCRED$;
};
// TODO, hier muss noch ein else hin, damit ggf erzeugt wird


for($finCL$ in $CLIENTS$){
  node tmp$finCL$Acc$COUNTER$=$finCL$;

  if($PWREUSE$ == "true"){
    $mode$=$PROB(["reuse","create"],[$REUSECHANCE$])$;
    if($mode$ == "reuse"){
      credential tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred=new credential("acc$COUNTER$$finCL$cred",$SELF$.tmp$finCL$Acc$COUNTER$.os.tmpInitCred.username.value,$SELF$.tmp$finCL$Acc$COUNTER$.os.tmpInitCred.password.value,"user",0,0);
      string tmp$finCL$Acc$COUNTER$.accCredReuse="ja";
    };
    if($mode$ != "reuse"){
      credential tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred=new credential("acc$COUNTER$$finCL$cred","acc$COUNTER$$finCL$user","acc$COUNTER$$finCL$pw","user",0,0);
      string tmp$finCL$Acc$COUNTER$.accCredReuse="nein";
    };
  };
  if($PWREUSE$ != "true"){
    credential tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred=new credential("acc$COUNTER$$finCL$cred","acc$COUNTER$$finCL$user","acc$COUNTER$$finCL$pw","user",0,0);
    string tmp$finCL$Acc$COUNTER$.accCredReuse="nein";
  };

  credential tmp$finCL$Acc$COUNTER$.os.dataStored=$SELF$.tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred;

  ipaddress tmp$finCL$Acc$COUNTER$.os.dataStored=$SELF$.tmpIp;

  credential[] os.applications.acceptedCredentials=$SELF$.tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred;

  fwallow tmp$finCL$Acc$COUNTER$.os.communicationRules=new fwallow([$finCL$.myInterfaces.ipAddress,$SELF$.tmpIp],["8443"]);
};

for($ITEM$ in $LDATA$){
  $finCL$=$PROB($CLIENTS$)$;

  usefulData tmp$ITEM$=$ITEM$;

  username tmp$ITEM$.owner=$SELF$.tmp$finCL$Acc$COUNTER$.tmpAcc$COUNTER$cred.username;
  username tmp$ITEM$.owner=$SELF$.os.applications.admin;
  usefulData os.applications.dataLinked=$ITEM$;
};

$sqlUname$="sqlAcc$COUNTER$Uname";
$sqlUname$+=$SUBNET$;
$sqlPw$="sqlAcc$COUNTER$Pw";
$sqlPw$+=$SUBNET$;

if($DBCREDS$ != none){
  credential tmpLinkCreds=$DBCREDS$;
  usefulData[] os.applications.dataStored=$DBCREDS$;
};
if($DBCREDS$ == none){
  if($LOCAL$ == "local"){
    credential tmpLinkCreds=new credential($sqlUname$,$sqlUname$,$sqlPw$,"admin",$NRWKT$,$PRWKT$);
  };
  if($LOCAL$ == "create"){
    credential tmpLinkCreds=new credential($sqlUname$,$sqlUname$,$sqlPw$,"admin",$NRWKT$,$PRWKT$);
  };
  if($LOCAL$ == "reuse"){
    credential tmpLinkCreds=new credential($sqlUname$,$sqlUname$,$sqlPw$,"user",$NRWKT$,$PRWKT$);
  };
  usefulData[] os.applications.dataStored=$SELF$.tmpLinkCreds;
};

//$LOCAL$="local";

if($LOCAL$ == "local"){
// here comes the instance of the sql server within the same node
  string weLocal="ja";
  ipAddress os.applications.dataStored=$SELF$.tmpIp;
  application tmpAccSql$COUNTER$=new appSqlServer("accSql$COUNTER$",$SELF$.myInterfaces,$SQLVULNS$);
  application os.applications=$SELF$.tmpAccSql$COUNTER$;


  credential[] tmpAccSql$COUNTER$.acceptedCredentials=$SELF$.tmpLinkCreds;
  credential[] tmpAccSql$COUNTER$.tmpAdminCred=$SELF$.tmpLinkCreds;
  username tmpAccSql$COUNTER$.sqlAdmin=$SELF$.tmpLinkCreds.username;

  if($LDATA$ != none){
    for($ITEM$ in $LDATA$){
      usefulData tmp$ITEM$=$ITEM$;
      username tmp$ITEM$.owner=$SELF$.tmpLinkCreds.username;
    };
    usefulData[] tmpAccSql$COUNTER$.dataStored=$LDATA$;
  };


};
